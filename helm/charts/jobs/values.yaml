# Default values for jobs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

deployment:
  annotations: {}

worker:
  replicaCount: 1
  resources: {}
  command: ["./app"]
  args: ["--worker"]

image:
  registry: registry.gitlab.com/r2devops/jobs
  tag: v1.3.3
  pullPolicy: IfNotPresent
  port: 3000

prometheus:
  enabled: false
  port: 9090

imagePullSecrets:
  - name: secret_name

livenessPath: "/job/health/alive"
readinessPath: "/job/health/ready"

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
  hosts:
    - host: "TOREPLACE"
      paths:
        - "/"
  tls:
    - secretName: jobs-tls
      hosts:
        - "TOREPLACE"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

environment:
  configmap:
    JOBS_LISTEN_ADDR: "0.0.0.0"
    JOBS_LISTEN_PORT: "3000"
    JOBS_DB_HOST: "TOREPLACE"
    JOBS_DB_PORT: "5432"
    JOBS_DB_NAME: "TOREPLACE"
    JOBS_DB_SSLMODE: "enable"
    JOBS_DB_TIMEZONE: "Europe/Paris"
    JOBS_GITLAB_URL: "https://gitlab.com"
    JOBS_AGENT: "R2Devops-jobs/1.0.0/go"
    JOBS_KRATOS_DEBUG: "false"
    JOBS_API_DOMAIN: "https://api.r2devops.DOMAIN"
    JOBS_CORS_ORIGIN: "TOREPLACE"
    SERVICE_KRATOS_URL: "https://api.r2devops.DOMAIN/kratos/public/"
    S3_HOST: "TOREPLACE"
    S3_REGION: "TOREPLACE"
    S3_BUCKET: "jobfiles"
    S3_DISABLE_SSL: "false"
    S3_FORCE_PATH_STYLE: "true"
    JOBS_REDIS_HOST: "redis"
    JOBS_REDIS_PORT: "6379"
    JOBS_REDIS_DB: "0"
    JOBS_REDIS_USER: "default"
    JOBS_REDIS_SET_NAMESPACES: "namespaces"
    JOBS_REDIS_SET_NAMESPACES_TTL: "720h"
    JOBS_REDIS_SET_TPL_SYNC: "templates_sync"
    JOBS_REDIS_SET_TPL_PROCESSING: "templates_processing"
    JOBS_REDIS_SET_TPL_MAX_SIZE: "1000"
    JOBS_AP_FILE_MAX_SIZE: "100000"
    JOBS_AP_FILE_MAX_NUMBER: "250"
    JOBS_AP_FILE_CLONE_TIMEOUT: "10000000000"

secrets:
    JOBS_DB_USER: "TOREPLACE"
    JOBS_DB_PASSWORD: "TOREPLACE"
    S3_ACCESS_KEY: "TOREPLACE"
    S3_SECRET_KEY: "TOREPLACE"
    JOBS_REDIS_PASSWORD: "TOREPLACE"

kratos:

  # TODO: add all missing values below

  replicaCount: 1

  rerources:
    limits:
      cpu: 600m
      memory: 1024Mi
    requests:
      cpu: 400m
      memory: 512Mi

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 30%
      maxUnavailable: 0

  image:
    repository: oryd/kratos
    tag: v0.8.2-alpha.1
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    admin:
      enabled: false

  ingress:
    admin:
      enabled: false
    public:
      enabled: true
      annotations: {}
      className: ""
      hosts:
        - host: "TOREPLACE"
          paths:
            - path: /kratos/public(/|$)(.*)
              pathType: ImplementationSpecific
      tls:
        - secretName: api-public-tls
          hosts:
            - "TOREPLACE"

  kratos:
    development: false
    automigration:
      enabled: true
    identitySchemas:
      "identity.default.schema.json": |
        {
          "$id": "https://r2devops.io/schemas/v1/member.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "R2Devops Member (v1)",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "minLength": 3,
                  "not": {
                    "anyOf": [
                      {
                        "pattern": "@mailinator\\.com$"
                      },
                      {
                        "pattern": "@yopmail\\.com$"
                      }
                    ]
                  },
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    }
                  }
                },
                "username": {
                  "minLength": 2,
                  "type": "string",
                  "title": "User Name",
                  "pattern": "^[\\.a-zA-Z0-9_-]+$",
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    }
                  }
                },
                "gitlab_username": {
                  "minLength": 1,
                  "type": "string",
                  "title": "GitLab username",
                  "pattern": "^[\\.a-zA-Z0-9_-]+$"
                },
                "gitlab_token": {
                  "type": "string",
                  "title": "GitLab token"
                },
                "github_username": {
                  "type": "string",
                  "title": "GitHub username"
                },
                "github_token": {
                  "type": "string",
                  "title": "GitHub token"
                },
                "full_name": {
                  "type": "string",
                  "title": "Full name",
                  "minLength": 3,
                  "maxLength": 40,
                  "pattern": "^[^:;?\\,%^`\"$*()_&@#]*$"
                },
                "picture": {
                  "type": "string",
                  "format": "uri",
                  "title": "Picture URL"
                },
                "website": {
                  "type": "string",
                  "format": "uri",
                  "title": "Website URL"
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "minLength": 3,
                  "maxLength": 60,
                  "pattern": "^[^:;?\\,%^`\"$*()_&@#]*$"
                },
                "linkedin": {
                  "type": "string",
                  "format": "uri",
                  "title": "Linkedin"
                },
                "job_title": {
                  "type": "string",
                  "title": "Job title",
                  "minLength": 3,
                  "maxLength": 60,
                  "pattern": "^[^:;?\\,%^`\"$*()_&@#]*$"
                },
                "twitter": {
                  "type": "string",
                  "title": "Twitter",
                  "minLength": 2,
                  "maxLength": 16,
                  "pattern": "^@?[A-Za-z0-9_]+$"
                },
                "bio": {
                  "type": "string",
                  "format": "text",
                  "minLength": 3,
                  "maxLength": 400,
                  "title": "Bio"
                },
                "goodies": {
                  "type": "string",
                  "title": "Goodies code"
                }
              },
              "required": [
                "email",
                "username"
              ],
              "additionalProperties": false
            }
          }
        }
      "oidc.gitlab.jsonnet": |
        local claims = {
          email_verified: false,
        } + std.extVar('claims');

        {
          identity: {
            traits: {
                      // Allowing unverified email addresses enables account
                      // enumeration attacks, especially if the value is used for
                      // e.g. verification or as a password login identifier.
                      //
                      // Therefore we only return the email if it (a) exists and (b) is marked verified
                      // by GitLab.
              [if "email" in claims && claims.email_verified then "email" else null]: claims.email,
              [if "nickname" in claims then "username" else null]: claims.nickname,
              [if "nickname" in claims then "gitlab_username" else null]: claims.nickname,
              [if "name" in claims then "full_name" else null]: claims.name,
              [if "website" in claims then "website" else null]: claims.website,
              [if "picture" in claims then "picture" else null]: claims.picture,
            },
          },
        }

    config:
      version: v0.8.2-alpha.1

      serve:
        public:
          cors:
            enabled: true
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Content-Type
              - Authorization
              - Cookie
            exposed_headers:
              - Content-Type
              - Set-Cookie
            debug: false

      selfservice:
        methods:
          password:
            enabled: false
          profile:
            enabled: true
          oidc:
            enabled: true
        flows:
          registration:
            after:
              oidc:
                hooks:
                  - hook: session

      log:
        format: json
        level: info
        leak_sensitive_values: false

      identity:
        default_schema_url: file:///etc/config/identity.default.schema.json

      courier:
        smtp: {}
